@page 
@model TheJawaShop.Pages.UserPages.IndexModel

@{ ViewData["Title"] = "TheJawaShop"; }

<h1>Putta na nolia. Hi chuba da nage?</h1>
<p><i>Hello there, what do you want?</i></p>
<hr />

<div>
    <a asp-page="OrderHistory" asp-route-id="@Model.ThisUserId">Order History</a> |
    <a asp-page="Checkout" asp-route-id="@Model.ThisUserId">Checkout</a> |
    <a asp-page="./../Index">Logout</a>
</div>
<p></p><p>@Model.DisplayMessage</p>
<table class="table">
    <thead>
        <tr>
            <!-- Headers to the columns -->
            <!-- Link each header with the ability to sort on Ascending and Descending -->
            @{
                string NameSort = "Name_Ascending";
                if (Model.CurrentSort == "Name_Ascending")
                    NameSort = "Name_Descending";

                <th>
                    <a asp-page="./Index"
                        asp-route-id="@Model.ThisUserId"
                        asp-route-CurrentPageNum="@Model.CurrentPageNum"
                        asp-route-TotalProducts="@Model.TotalProducts"
                        asp-route-CurrentSort="@NameSort"
                        asp-route-SearchString="@Model.SearchString"
                    >@Html.DisplayNameFor(modelItem => modelItem.Product[0].ProductName)</a>
                </th>
                <th>@Html.DisplayNameFor(modelItem => modelItem.Product[0].ProductPrice)</th>
                <th>
                    <form method="post" asp-page="./Index">
                        <div class="form-group" >
                            Search for a Product:
                                <!-- asp-route-SearchValue="Model.SearchString" -->
                            <input type="text" name="SearchValue" value="@Model.SearchString"/>
                            <input type="submit"
                                asp-page-handler="FindProduct"
                                asp-route-UserId="@Model.ThisUserId"
                                asp-route-PageNum="@Model.CurrentPageNum"
                                asp-route-Total="@Model.TotalProducts"
                                asp-route-SortValue="@Model.CurrentSort"
                            value="Search" class="btn btn-primary btn-sm"/> |
                            <a asp-page="./Index"
                                asp-route-id="@Model.ThisUserId"
                                asp-route-CurrentPageNum="@Model.CurrentPageNum"
                                asp-route-TotalProducts="@Model.TotalProducts"
                                asp-route-CurrentSort="@Model.CurrentSort"
                                asp-route-SearchString=""
                            >Reset Search Filter</a>
                        </div>
                    </form>
                </th>
            }
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Product)
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => item.ProductName)</td>
            <td>@Html.DisplayFor(modelItem => item.ProductPrice)</td>
            <td>
                <!-- Buttons link to On-Post methods -->
                <!-- Route each parameter in the page also with each button press -->
                <form method="post" asp-page="./Index">
                    <div class="form-group">
                        <input type="submit"
                            asp-page-handler="AddToCart"
                            asp-route-ProdId="@item.ProductId"
                            asp-route-UserId="@Model.ThisUserId"
                            asp-route-PageNum="@Model.CurrentPageNum"
                            asp-route-Total="@Model.TotalProducts"
                            asp-route-SortValue="@Model.CurrentSort"
                            asp-route-SearchValue="@Model.SearchString"
                        value="Add To Cart" class="btn btn-primary btn-sm"/>
                        <input type="submit"
                            asp-page-handler="RemoveFromCart"
                            asp-route-ProdId="@item.ProductId"
                            asp-route-UserId="@Model.ThisUserId"
                            asp-route-PageNum="@Model.CurrentPageNum"
                            asp-route-Total="@Model.TotalProducts"
                            asp-route-SortValue="@Model.CurrentSort"
                            asp-route-SearchValue="@Model.SearchString"
                        value="Remove From Cart" class="btn btn-primary btn-sm"/>
                    </div>
                </form>
            </td>
        </tr>
    }
    </tbody>
</table>
<hr />
@{
    // Code to check the page number disabling
    string previousPage = "active";
    string nextPage = "active";
    if (Model.CurrentPageNum <= 1) // Pages start at 1
        previousPage = "disabled";

    // Disable the Next Button if skipped products exceeds available products
    if ((Model.CurrentPageNum * 10) >= Model.TotalProducts)
        nextPage = "disabled";

    // The follwing code includes two link buttons for paging
    // The following code also includes four routing parameters for keeping page information
    <nav aria-label="Table Paging for the Jawa Shop">
        <ul class="pagination justify-content-end">
            <li class="page-item @previousPage">
                <a class="page-link" asp-page="./Index"
                    asp-route-id="@Model.ThisUserId"
                    asp-route-CurrentPageNum="@(Model.CurrentPageNum - 1)"
                    asp-route-TotalProducts="@Model.TotalProducts"
                    asp-route-CurrentSort="@Model.CurrentSort"
                    asp-route-SearchString="@Model.SearchString"
                >Previous Page</a>
            </li>
            <li class="page-item @nextPage">
                <a class="page-link" asp-page="./Index"
                    asp-route-id="@Model.ThisUserId"
                    asp-route-CurrentPageNum="@(Model.CurrentPageNum + 1)"
                    asp-route-TotalProducts="@Model.TotalProducts"
                    asp-route-CurrentSort="@Model.CurrentSort"
                    asp-route-SearchString="@Model.SearchString"
                >Next Page</a>
            </li>
        </ul>
    </nav>
}